{
  "Uuid": "31e9bd7e-87f3-466f-ac3e-432fa9028d5e",
  "IsCustomNode": false,
  "Description": null,
  "Name": "runVSCode",
  "ElementResolver": {
    "ResolutionMap": {}
  },
  "Inputs": [],
  "Outputs": [],
  "Nodes": [
    {
      "ConcreteType": "PythonNodeModels.PythonStringNode, PythonNodeModels",
      "Engine": "IronPython2",
      "VariableInputPorts": true,
      "NodeType": "ExtensionNode",
      "Id": "15f5c9f96ce7422cbe335af1a688c098",
      "Inputs": [
        {
          "Id": "76707e6733a343908ca57c19195dd735",
          "Name": "script",
          "Description": "Python script to run.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "cb648a34c450459f95be75c3745c6965",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "ddd331fa903e4b67850affb35f05a778",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs a Python script from a string."
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "re  = open(r\"C:\\Users\\Desktop\\Python\\02_PyRevit\\04_Processing\\01_pyRevitAPI\\processing_240615_getColumSize.py\", \"r\")\r\n\r\ninterpret = re.read()\r\n\r\nOUT =  interpret",
      "Engine": "IronPython2",
      "VariableInputPorts": true,
      "Id": "1f1319836c5549eeae581d4c3a62438c",
      "Inputs": [
        {
          "Id": "66947fc67a244621bc2eb3613639d899",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "960e1075873b47f4b328084055928b33",
          "Name": "IN[1]",
          "Description": "Input #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "cba3eae1f33f4e91aa2bb560648903a5",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "CoreNodeModels.Input.BoolSelector, CoreNodeModels",
      "NodeType": "BooleanInputNode",
      "InputValue": false,
      "Id": "49af80e621354d128b0de327ff458fe1",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "6bd4c887700847b9be5cae010e9ad966",
          "Name": "",
          "Description": "Boolean",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Selection between a true and false."
    },
    {
      "ConcreteType": "CoreNodeModels.Input.Filename, CoreNodeModels",
      "HintPath": "C:\\Users\\Desktop\\Python\\02_PyRevit\\04_Processing\\01_pyRevitAPI\\processing_240615_getColumSize.py",
      "InputValue": ".\\processing_240615_getColumSize.py",
      "NodeType": "ExtensionNode",
      "Id": "e3bfcf8694d543f2b8e52fb77147d5bf",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "4fec6cf7e3d64111bd9877cdc8d19586",
          "Name": "",
          "Description": "Filename",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows you to select a file on the system to get its filename"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "a;",
      "Id": "9d40a0dd5a2148289e91f9cac4d00ec8",
      "Inputs": [
        {
          "Id": "e9e189a2c8ee4bf1b0432b106cff3ec8",
          "Name": "a",
          "Description": "a",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "409a493edbd84e95a8ce612facdbf84f",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "\"\"\"Copyright by: vudinhduybm@gmail.com\"\"\"\r\n#region ___import all Library\r\nimport clr\r\nimport sys \r\nimport System   \r\nimport math\r\nimport collections\r\nimport duynamoLibrary as dLib\r\n\r\nsys.path.append('')\r\nfrom math import cos,sin,tan,radians\r\n\r\nclr.AddReference(\"ProtoGeometry\")\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\nclr.AddReference(\"RevitAPI\") \r\nimport Autodesk\r\nfrom Autodesk.Revit.DB import* \r\nfrom Autodesk.Revit.DB.Structure import*\r\n\r\nclr.AddReference(\"DSCoreNodes\")\r\nfrom DSCore.List import Flatten\r\n\r\nclr.AddReference(\"RevitAPIUI\") \r\nfrom Autodesk.Revit.UI import*\r\nfrom Autodesk.Revit.UI.Selection import ISelectionFilter\r\nclr.AddReference(\"System\") \r\nfrom System.Collections.Generic import List\r\n\r\nclr.AddReference(\"RevitNodes\")\r\nimport Revit\r\nclr.ImportExtensions(Revit.Elements)\r\nclr.ImportExtensions(Revit.GeometryConversion)\r\n\r\nclr.AddReference(\"RevitServices\")\r\nimport RevitServices\r\nfrom RevitServices.Persistence import DocumentManager\r\nfrom RevitServices.Transactions import TransactionManager\r\n\r\nclr.AddReference(\"System.Windows.Forms\")\r\nclr.AddReference(\"System.Drawing\")\r\nclr.AddReference(\"System.Windows.Forms.DataVisualization\")\r\n\r\nimport System.Windows.Forms \r\nfrom System.Windows.Forms import *\r\nimport System.Drawing\r\nfrom System.Drawing import *\r\n#endregion\r\n\r\n#region ___Current doc/app/ui\r\ndoc = DocumentManager.Instance.CurrentDBDocument\r\nuiapp = DocumentManager.Instance.CurrentUIApplication\r\napp = uiapp.Application\r\nuidoc = DocumentManager.Instance.CurrentUIApplication.ActiveUIDocument\r\nview = doc.ActiveView\r\n#endregion\r\n\r\n#region ___someFunctions\r\ndef uwList(input):\r\n    result = input if isinstance(input, list) else [input]\r\n    return UnwrapElement(input)\r\n\r\n#endregion\r\n\r\n\r\ncolCollector   = uwList(IN[0])\r\n\r\n# Do some action in a Transaction\r\nTransactionManager.Instance.EnsureInTransaction(doc)\r\n\r\n# Initialize lists to store filtered columns and material names\r\nfilterColums = []\r\n\r\nfilterNames = []\r\nnames = []\r\nfor c in colCollector:\r\n    matParam1 = c.get_Parameter(BuiltInParameter.ELEM_FAMILY_PARAM).AsValueString()\r\n    names.append(matParam1)\r\n# filterCol = [c for c in colCollector if 'Concrete' in matName]\r\n# filterColums.append(filterCol)\r\n\r\nTransactionManager.Instance.TransactionTaskDone()\r\n\r\nOUT = names \r\n",
      "Engine": "IronPython2",
      "VariableInputPorts": true,
      "Id": "0cae1cb9bb6046d682aa3931bfc51f3e",
      "Inputs": [
        {
          "Id": "d6d3b2cb57a544709098db1007756cf9",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "af0b8cfc14b6407292f1aa9e58584bce",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "\"\"\"Copyright by: vudinhduybm@gmail.com\"\"\"\r\n#region ___import all Library\r\nimport clr\r\nimport sys \r\nimport System   \r\nimport math\r\nimport collections\r\n\r\nsys.path.append('C:\\Program Files\\Autodesk\\Revit 2022\\AddIns\\DynamoForRevit\\IronPython.StdLib.2.7.9\\duynamoLibrary')\r\nfrom duynamoLibrary import *\r\nclr.AddReference(\"ProtoGeometry\")\r\n\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\nclr.AddReference(\"RevitAPI\") \r\nimport Autodesk\r\nfrom Autodesk.Revit.DB import* \r\nfrom Autodesk.Revit.DB.Structure import*\r\n\r\nclr.AddReference('DSCoreNodes')\r\nfrom DSCore.List import Flatten\r\n\r\nclr.AddReference(\"RevitAPIUI\") \r\nfrom Autodesk.Revit.UI import*\r\n\r\nclr.AddReference(\"System\") \r\nfrom System.Collections.Generic import List\r\n\r\nclr.AddReference(\"RevitNodes\")\r\nimport Revit\r\nclr.ImportExtensions(Revit.Elements)\r\nclr.ImportExtensions(Revit.GeometryConversion)\r\n\r\nclr.AddReference(\"RevitServices\")\r\nimport RevitServices\r\nfrom RevitServices.Persistence import DocumentManager\r\nfrom RevitServices.Transactions import TransactionManager\r\n\r\nclr.AddReference(\"System.Windows.Forms\")\r\nclr.AddReference(\"System.Drawing\")\r\nclr.AddReference(\"System.Windows.Forms.DataVisualization\")\r\n\r\nimport System.Windows.Forms \r\nfrom System.Windows.Forms import *\r\nimport System.Drawing\r\nfrom System.Drawing import *\r\n#endregion\r\n\r\n#region ___Current doc/app/ui\r\ndoc = DocumentManager.Instance.CurrentDBDocument\r\nuiapp = DocumentManager.Instance.CurrentUIApplication\r\napp = uiapp.Application\r\nuidoc = DocumentManager.Instance.CurrentUIApplication.ActiveUIDocument\r\nview = doc.ActiveView\r\n#endregion\r\n\r\n#region ___someFunctions\r\ndef uwList(input):\r\n    result = input if isinstance(input, list) else [input]\r\n    return UnwrapElement(input)\r\n\r\n#endregion\r\n\r\n\r\nTransactionManager.Instance.EnsureInTransaction(doc)\r\ncate = BuiltInCategory.OST_StructuralColumns\r\ncolCollector = FilteredElementCollector(doc).OfCategory(cate).WhereElementIsElementType()\r\nfilteredColumns = []\r\nname = []\r\n\r\nfor c in colCollector:\r\n    name = c.Family.LookupParameter('Material for Model Behavior').AsValueString()\r\n    if name is not None and 'Concrete' in name :\r\n        filteredColumns.append(c)\r\n\r\nbaseCol = filteredColumns[0]\r\n\r\nTransactionManager.Instance.TransactionTaskDone()\r\n\r\nOUT = baseCol ",
      "Engine": "IronPython2",
      "VariableInputPorts": true,
      "Id": "3d99a8c919ec4344b9b3fe02c2a78a2e",
      "Inputs": [
        {
          "Id": "607c32cec49a4418ab70a11af8af1c25",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "6321287a6c5b4712bb6a4bae41f8c48d",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "CoreNodeModels.Input.BoolSelector, CoreNodeModels",
      "NodeType": "BooleanInputNode",
      "InputValue": true,
      "Id": "4e6b1fc52d6d4e9bba51ed453ff3ee1a",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "1263bf45c7154774b60af48faef9f698",
          "Name": "",
          "Description": "Boolean",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Selection between a true and false."
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "\"\"\"Copyright by: vudinhduybm@gmail.com\"\"\"\r\n#region ___import all Library\r\nimport clr\r\nimport sys \r\nimport System   \r\nimport math\r\nimport collections\r\n\r\nsys.path.append('C:\\Program Files\\Autodesk\\Revit 2022\\AddIns\\DynamoForRevit\\IronPython.StdLib.2.7.9\\duynamoLibrary')\r\nfrom duynamoLibrary import *\r\nclr.AddReference(\"ProtoGeometry\")\r\n\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\nclr.AddReference(\"RevitAPI\") \r\nimport Autodesk\r\nfrom Autodesk.Revit.DB import* \r\nfrom Autodesk.Revit.DB.Structure import*\r\n\r\nclr.AddReference('DSCoreNodes')\r\nfrom DSCore.List import Flatten\r\n\r\nclr.AddReference(\"RevitAPIUI\") \r\nfrom Autodesk.Revit.UI import*\r\n\r\nclr.AddReference(\"System\") \r\nfrom System.Collections.Generic import List\r\n\r\nclr.AddReference(\"RevitNodes\")\r\nimport Revit\r\nclr.ImportExtensions(Revit.Elements)\r\nclr.ImportExtensions(Revit.GeometryConversion)\r\n\r\nclr.AddReference(\"RevitServices\")\r\nimport RevitServices\r\nfrom RevitServices.Persistence import DocumentManager\r\nfrom RevitServices.Transactions import TransactionManager\r\n\r\nclr.AddReference(\"System.Windows.Forms\")\r\nclr.AddReference(\"System.Drawing\")\r\nclr.AddReference(\"System.Windows.Forms.DataVisualization\")\r\n\r\nimport System.Windows.Forms \r\nfrom System.Windows.Forms import *\r\nimport System.Drawing\r\nfrom System.Drawing import *\r\n#endregion\r\n\r\n#region ___Current doc/app/ui\r\ndoc = DocumentManager.Instance.CurrentDBDocument\r\nuiapp = DocumentManager.Instance.CurrentUIApplication\r\napp = uiapp.Application\r\nuidoc = DocumentManager.Instance.CurrentUIApplication.ActiveUIDocument\r\nview = doc.ActiveView\r\n#endregion\r\n\r\n#region ___someFunctions\r\ndef uwList(input):\r\n    result = input if isinstance(input, list) else [input]\r\n    return UnwrapElement(input)\r\ndef duplicateColumns(baseColumn, bList, hList):\r\n    newColumns = []\r\n    sizeList = []\r\n    ss = []\r\n    for b, h in zip(bList, hList):\r\n    \tsize = \"{} x {}mm\".format(b, h)\r\n    \tsizeList.append(size)\r\n    TransactionManager.Instance.EnsureInTransaction(doc)\r\n    try:\r\n        for b, h, size in zip(bList, hList, sizeList):\r\n            idList = List[ElementId]([c.Id for c in baseColumn])\r\n            copyIds = ElementTransformUtils.CopyElements(doc, idList, doc, Transform.Identity, CopyPasteOptions())\r\n            for id in copyIds:\r\n                newCol = doc.GetElement(id)\r\n                newCol.Name = size\r\n                bParam = newCol.LookupParameter('b')\r\n                hParam = newCol.LookupParameter('h')\r\n                if bParam and hParam:\r\n                    bParam.Set(b/304.8)\r\n                    hParam.Set(h/304.8)\r\n                newColumns.append(newCol)\r\n    except Exception as e:\r\n        pass\r\n    TransactionManager.Instance.TransactionTaskDone()\r\n    return newColumns\r\n#endregion\r\n\r\n\r\nbaseColumn   = [uwList(IN[0])]\r\nbList = uwList(IN[1])\r\nhList = uwList(IN[2])\r\n# Do some action in a Transaction\r\nTransactionManager.Instance.EnsureInTransaction(doc)\r\ncols = duplicateColumns(baseColumn, bList, hList)\r\n\r\nTransactionManager.Instance.TransactionTaskDone()\r\n\r\nOUT = cols",
      "Engine": "IronPython2",
      "VariableInputPorts": true,
      "Id": "97c09e5f6a1c4f008500f6e7e20b2b6e",
      "Inputs": [
        {
          "Id": "6658e6cfa0cb4a07bc3b44ec12164a1f",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "3ee5d28dfdba488c8228d247c6e980e1",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "a;",
      "Id": "5155f43ee1f0428fb6d26fcdb2868ee4",
      "Inputs": [
        {
          "Id": "c2b3f09822f0412a89c503c908a4c5a1",
          "Name": "a",
          "Description": "a",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "b4a8ddf4f7fb41feb64b42460c9ddfc5",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    }
  ],
  "Connectors": [
    {
      "Start": "ddd331fa903e4b67850affb35f05a778",
      "End": "e9e189a2c8ee4bf1b0432b106cff3ec8",
      "Id": "253c545946844aa5b41a17116b408306"
    },
    {
      "Start": "cba3eae1f33f4e91aa2bb560648903a5",
      "End": "76707e6733a343908ca57c19195dd735",
      "Id": "46e061d341b540249d294d6151bf738c"
    },
    {
      "Start": "6bd4c887700847b9be5cae010e9ad966",
      "End": "66947fc67a244621bc2eb3613639d899",
      "Id": "6ee0c0888bb841f996edd351e0484eb9"
    },
    {
      "Start": "4fec6cf7e3d64111bd9877cdc8d19586",
      "End": "960e1075873b47f4b328084055928b33",
      "Id": "0de200107ea94d9cbbf82e3429d8a902"
    },
    {
      "Start": "409a493edbd84e95a8ce612facdbf84f",
      "End": "d6d3b2cb57a544709098db1007756cf9",
      "Id": "55c3d3d455d84985b58f9ccf6462c9b2"
    },
    {
      "Start": "6321287a6c5b4712bb6a4bae41f8c48d",
      "End": "6658e6cfa0cb4a07bc3b44ec12164a1f",
      "Id": "105783f428944495bae15f800ce588f7"
    },
    {
      "Start": "1263bf45c7154774b60af48faef9f698",
      "End": "607c32cec49a4418ab70a11af8af1c25",
      "Id": "f10a8d1ee794461383ddf9afb0188ab6"
    },
    {
      "Start": "3ee5d28dfdba488c8228d247c6e980e1",
      "End": "c2b3f09822f0412a89c503c908a4c5a1",
      "Id": "d937e5ad4a3647e19f7e2133eafe1ee1"
    }
  ],
  "Dependencies": [],
  "NodeLibraryDependencies": [],
  "Bindings": [],
  "View": {
    "Dynamo": {
      "ScaleFactor": 1.0,
      "HasRunWithoutCrash": true,
      "IsVisibleInDynamoLibrary": true,
      "Version": "2.10.1.3976",
      "RunType": "Automatic",
      "RunPeriod": "1000"
    },
    "Camera": {
      "Name": "Background Preview",
      "EyeX": -17.0,
      "EyeY": 24.0,
      "EyeZ": 50.0,
      "LookX": 12.0,
      "LookY": -13.0,
      "LookZ": -58.0,
      "UpX": 0.0,
      "UpY": 1.0,
      "UpZ": 0.0
    },
    "NodeViews": [
      {
        "ShowGeometry": true,
        "Name": "Python Script From String",
        "Id": "15f5c9f96ce7422cbe335af1a688c098",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 584.62550333472279,
        "Y": 297.69318823476459
      },
      {
        "ShowGeometry": true,
        "Name": "Python Script",
        "Id": "1f1319836c5549eeae581d4c3a62438c",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 431.453560925763,
        "Y": 244.31060642701254
      },
      {
        "ShowGeometry": true,
        "Name": "Boolean",
        "Id": "49af80e621354d128b0de327ff458fe1",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 507.24742634125113,
        "Y": 144.75790319305773
      },
      {
        "ShowGeometry": true,
        "Name": "File Path",
        "Id": "e3bfcf8694d543f2b8e52fb77147d5bf",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 117.64728151089241,
        "Y": 388.56996153628324
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "9d40a0dd5a2148289e91f9cac4d00ec8",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 825.0,
        "Y": 228.0
      },
      {
        "ShowGeometry": true,
        "Name": "Python Script",
        "Id": "0cae1cb9bb6046d682aa3931bfc51f3e",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 963.33123488934859,
        "Y": 236.14851434888226
      },
      {
        "ShowGeometry": true,
        "Name": "Python Script",
        "Id": "3d99a8c919ec4344b9b3fe02c2a78a2e",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1737.5619753715225,
        "Y": 305.06202826702292
      },
      {
        "ShowGeometry": true,
        "Name": "Boolean",
        "Id": "4e6b1fc52d6d4e9bba51ed453ff3ee1a",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1836.9010936864711,
        "Y": 129.95835994284565
      },
      {
        "ShowGeometry": true,
        "Name": "Python Script",
        "Id": "97c09e5f6a1c4f008500f6e7e20b2b6e",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2033.6474733571893,
        "Y": 306.40224624697015
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "5155f43ee1f0428fb6d26fcdb2868ee4",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2294.2983178766312,
        "Y": 305.0
      }
    ],
    "Annotations": [],
    "X": -932.99797645852641,
    "Y": -41.681680542175314,
    "Zoom": 0.63161966125590441
  }
}